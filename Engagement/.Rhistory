password = "efiYjhFV")
#inspect tables
#dbListTables(con)
library(DBI)
cutofdate = c('2016-12-31')
publisher <- 2
startdate <- c('2016-12-31')
enddate <- as.character(Sys.Date()) #insert date AFTER last day of reporting
myquery <- paste("SELECT  `date`, `ad_slot_id`, `channel_id`, `count` FROM `statistics_slots` WHERE `ad_slot_id` IN( '2',  '13',  '22',  '33', '381', '377', '380', '378', '379',  '42',  '52',  '66',  '63',  '61', '317', '144', '234', '240', '242', '246', '244', '248', '250', '216', '313', '318', '230', '210') AND `date` > '", startdate, "' AND `date` < '", enddate, "' AND `publisher_id` = ", publisher , sep ='')
cmrallday <- dbGetQuery(con, myquery)
cmrallday$date <- as.Date(cmrallday$date)
cmrallday$ad_slot_id <- as.numeric(cmrallday$ad_slot_id)
#disconnect DB
dbDisconnect(con)
#work with AdSlotKey file for labeling sections
library(readr)
read_csv("AdSlotKey.csv") -> slotkey
slotkey$channel_id <- NULL
slotkey$ad_slot_id <- as.numeric(slotkey$ad_slot_id)
slotkey$section <- factor(slotkey$section, levels = c('HomePage', 'News', 'Entertainment', 'Sports', 'World', 'Business', 'Opinions', 'Members', 'Country', 'Jobs', 'Real Estate', 'Telephone Directory', 'Used Cars', 'Trucks'))
#label data with sectionkey and organise
library(dplyr)
sectjoin <- left_join(cmrallday, slotkey, by = ('ad_slot_id'))
sectjoin$medium <- ifelse(sectjoin$channel_id == 1, 'Desktop', 'Mobile')
sectjoin$count <- as.numeric(sectjoin$count)
##!!!remove outliers  (method just copied). Select 1 of 2 lines. Top = filter, bottom is NO FILTER
#sectclean <- sectjoin %>% group_by(ad_slot_id) %>% filter(!(abs(count - median(count)) > 3*sd(count)))
sectclean <- sectjoin
#Top sections
library(data.table)
sect1 <- as.data.table(filter(sectclean, section %in% c('HomePage', 'Sports', 'Entertainment', 'Business', 'World')))
#sect1[(ad_slot_id == 317 & date < '2016-04-14'), count:=count/1.5]
sect1$section <- factor(sect1$section, levels = c('HomePage', 'News', 'Entertainment', 'Sports', 'World', 'Business', 'Opinions', 'Members', 'Country', 'Jobs', 'Real Estate', 'Telephone Directory', 'Used Cars', 'Trucks'))
#2nd Tier sections
sect2 <- filter(sectclean, section %in% c('Opinions', 'Members', 'Country', 'Jobs', 'Real Estate', 'Telephone Directory'))
sect2$section <- factor(sect2$section, levels = c('HomePage', 'News', 'Entertainment', 'Sports', 'World', 'Business', 'Opinions', 'Members', 'Country', 'Jobs', 'Real Estate', 'Telephone Directory', 'Used Cars', 'Trucks'))
#Section Plots
#testplots based on cmrallday
library(ggplot2)
library(RColorBrewer)
library(ggthemes)
cols <- brewer.pal(8, 'Set1')
#PLOT top and bottom sections
# #Low Indiv. y-axis
# ggplot(data = sectlowsect, aes(date, count, col = section)) +
#   geom_point(alpha = 1) +
#   labs(title ='Daily PageViews for Low Volume Sections: Individual y-axis', y = 'pageviews')  +
#   theme_light() +
#   scale_color_manual(values = cols) +
#   facet_grid(section ~ medium, scales = 'free_y')
#High Indiv y-axis
# ggplot(data = secttopsect, aes(date, count, col = section)) +
#   geom_point(alpha = 1) +
#   labs(title ='Daily PageViews for High Volume Sections: Individual y-axis', y = 'pageviews')  +
#   theme_light() +
#   scale_color_manual(values = cols) +
#   facet_grid(section ~ medium, scales = 'free_y')
#High Shared y-axis
cmrp2 <- ggplot(data = sect1, aes(date, count, col = section)) +
geom_point(alpha = .8, size = 2) +
labs(title = 'Daily PageViews part I', y = 'pageviews')  +
scale_y_continuous(limits = c(0, 1200), expand = c(0, 0)) +
theme_light() + guides(col=FALSE) +
scale_color_manual(values = cols) +
facet_grid(section ~ medium)
#Middle Shared y-axis
cmrp3 <- ggplot(data = sect2, aes(date, count, col = section)) +
geom_point(alpha = .8, size = 2) +
labs(title = 'Daily PageViews part II', y = 'pageviews')  +
scale_y_continuous(limits = c(0, 1200), expand = c(0, 0)) +
theme_light() + guides(col=FALSE) +
scale_color_manual(values = cols) +
facet_grid(section ~ medium)
##Plots for a single section
##first fill in section of interest below
sectionofinterest <- c('News')
singlesect <- as.data.table(filter(sectclean, section %in% sectionofinterest))
singlesect$section <- factor(singlesect$section, levels = sectionofinterest)
maxyax_singlsect <- signif(max(singlesect$count)*1.1, 2)
ticksyax_singlsect <- floor(round(max(singlesect$count)*1.1))
cmrp1 <- ggplot(data = singlesect, aes(date, count, col = section)) +
geom_point(alpha = .8, size = 2) +
labs(title = paste('Daily PageViews for', sectionofinterest, sep = ' '), y = "pageviews") +
theme_light() +
theme(axis.text.x = element_text(angle = 90), legend.position="none") +
scale_y_continuous(breaks = seq(0, maxyax_singlsect, by = maxyax_singlsect/5), limits = c(0, maxyax_singlsect), expand = c(0, 0)) +
scale_color_manual(values = cols) +
facet_grid(section ~ medium)
cmrp1
cmrp2
View(sect2)
maxyax_sect1 <- signif(max(sect1$count)*1.1, 2)
# Plotting section data for Cameroonweb
#import section data
# dbConnect() call
library(RMySQL)
con <- dbConnect(RMySQL::MySQL(),
dbname = 'rijk9_imkserver',
host = "qs3990.pair.com",
port = 0000,
user = "rijk9_12",
password = "efiYjhFV")
#inspect tables
#dbListTables(con)
library(DBI)
cutofdate = c('2016-12-31') #not in use
publisher <- 3  #imk publisher number; 3 = cameroonweb
startdate <- c('2016-12-31') #insert date before startdate
enddate <- as.character(Sys.Date()) #insert date AFTER last day of reporting
myquery <- paste("SELECT  `date`, `ad_slot_id`, `channel_id`, `count` FROM `statistics_slots` WHERE `ad_slot_id` IN( '2',  '13',  '22',  '33', '381', '377', '380', '378', '379',  '42',  '52',  '66',  '63',  '61', '317', '144', '234', '240', '242', '246', '244', '248', '250', '216', '313', '318', '230', '210') AND `date` > '", startdate, "' AND `date` < '", enddate, "' AND `publisher_id` = ", publisher , sep ='')
cmrallday <- dbGetQuery(con, myquery)
cmrallday$date <- as.Date(cmrallday$date)
cmrallday$ad_slot_id <- as.numeric(cmrallday$ad_slot_id)
#disconnect DB
dbDisconnect(con)
#work with AdSlotKey file for labeling sections
library(readr)
read_csv("AdSlotKey.csv") -> slotkey
slotkey$channel_id <- NULL
slotkey$ad_slot_id <- as.numeric(slotkey$ad_slot_id)
slotkey$section <- factor(slotkey$section, levels = c('HomePage', 'News', 'Entertainment', 'Sports', 'World', 'Business', 'Opinions', 'Members', 'Country', 'Jobs', 'Real Estate', 'Telephone Directory', 'Used Cars', 'Trucks'))
#label data with sectionkey and organise
library(dplyr)
sectjoin <- left_join(cmrallday, slotkey, by = ('ad_slot_id'))
sectjoin$medium <- ifelse(sectjoin$channel_id == 1, 'Desktop', 'Mobile')
sectjoin$count <- as.numeric(sectjoin$count)
##!!!remove outliers  (method just copied). Select 1 of 2 lines. Top = filter, bottom is NO FILTER
#sectclean <- sectjoin %>% group_by(ad_slot_id) %>% filter(!(abs(count - median(count)) > 3*sd(count)))
sectclean <- sectjoin
#Top sections
library(data.table)
sect1 <- as.data.table(filter(sectclean, section %in% c('HomePage', 'Sports', 'Entertainment', 'Business', 'World')))
#sect1[(ad_slot_id == 317 & date < '2016-04-14'), count:=count/1.5]
sect1$section <- factor(sect1$section, levels = c('HomePage', 'News', 'Entertainment', 'Sports', 'World', 'Business', 'Opinions', 'Members', 'Country', 'Jobs', 'Real Estate', 'Telephone Directory', 'Used Cars', 'Trucks'))
#2nd Tier sections
sect2 <- filter(sectclean, section %in% c('Opinions', 'Members', 'Country', 'Jobs', 'Real Estate', 'Telephone Directory'))
sect2$section <- factor(sect2$section, levels = c('HomePage', 'News', 'Entertainment', 'Sports', 'World', 'Business', 'Opinions', 'Members', 'Country', 'Jobs', 'Real Estate', 'Telephone Directory', 'Used Cars', 'Trucks'))
#Section Plots
#testplots based on cmrallday
library(ggplot2)
library(RColorBrewer)
library(ggthemes)
cols <- brewer.pal(8, 'Set1')
#PLOT top and bottom sections
# #Low Indiv. y-axis
# ggplot(data = sectlowsect, aes(date, count, col = section)) +
#   geom_point(alpha = 1) +
#   labs(title ='Daily PageViews for Low Volume Sections: Individual y-axis', y = 'pageviews')  +
#   theme_light() +
#   scale_color_manual(values = cols) +
#   facet_grid(section ~ medium, scales = 'free_y')
#High Indiv y-axis
# ggplot(data = secttopsect, aes(date, count, col = section)) +
#   geom_point(alpha = 1) +
#   labs(title ='Daily PageViews for High Volume Sections: Individual y-axis', y = 'pageviews')  +
#   theme_light() +
#   scale_color_manual(values = cols) +
#   facet_grid(section ~ medium, scales = 'free_y')
#High Shared y-axis
maxyax_sect1 <- signif(max(sect1$count)*1.1, 2)
cmrp2 <- ggplot(data = sect1, aes(date, count, col = section)) +
geom_point(alpha = .8, size = 2) +
labs(title = 'Daily PageViews part I', y = 'pageviews')  +
scale_y_continuous(breaks = seq(0, maxyax_sect1, by = maxyax_sect1/5), limits = c(0, maxyax_sect2), expand = c(0, 0)) +
theme_light() + guides(col=FALSE) +
scale_color_manual(values = cols) +
facet_grid(section ~ medium)
#Middle Shared y-axis
maxyax_sect2 <- signif(max(sect2$count)*1.1, 2)
cmrp3 <- ggplot(data = sect2, aes(date, count, col = section)) +
geom_point(alpha = .8, size = 2) +
labs(title = 'Daily PageViews part II', y = 'pageviews')  +
scale_y_continuous(breaks = seq(0, maxyax_sect2, by = maxyax_sect2/5), limits = c(0, maxyax_sect2), expand = c(0, 0)) +
theme_light() + guides(col=FALSE) +
scale_color_manual(values = cols) +
facet_grid(section ~ medium)
##Plots for a single section
##first fill in section of interest below
sectionofinterest <- c('News')
singlesect <- as.data.table(filter(sectclean, section %in% sectionofinterest))
singlesect$section <- factor(singlesect$section, levels = sectionofinterest)
maxyax_singlsect <- signif(max(singlesect$count)*1.1, 2)
ticksyax_singlsect <- floor(round(max(singlesect$count)*1.1))
cmrp1 <- ggplot(data = singlesect, aes(date, count, col = section)) +
geom_point(alpha = .8, size = 2) +
labs(title = paste('Daily PageViews for', sectionofinterest, sep = ' '), y = "pageviews") +
theme_light() +
theme(axis.text.x = element_text(angle = 90), legend.position="none") +
scale_y_continuous(breaks = seq(0, maxyax_singlsect, by = maxyax_singlsect/5), limits = c(0, maxyax_singlsect), expand = c(0, 0)) +
scale_color_manual(values = cols) +
facet_grid(section ~ medium)
cmrp1
cmrp2
View(cmrallday)
View(sect1)
View(sect2)
cmrp3
maxyax_sect1 <- signif(max(sect1$count)*1.1, 2)
cmrp2 <- ggplot(data = sect1, aes(date, count, col = section)) +
geom_point(alpha = .8, size = 2) +
labs(title = 'Daily PageViews part I', y = 'pageviews')  +
scale_y_continuous(breaks = seq(0, maxyax_sect1, by = maxyax_sect1/5), limits = c(0, maxyax_sect1), expand = c(0, 0)) +
theme_light() + guides(col=FALSE) +
scale_color_manual(values = cols) +
facet_grid(section ~ medium)
cmrp2
View(cmrallday)
hmpf <- cmrallday[1:4]
hmpf <- cmrallday[1:4, ]
cmrallday
hmpf
hmpf <- rnorm(12, 5, 2.5)
hmpf1 <- as.matrix(hmpf, 3, 4)
View(hmpf1)
hmpf1 <- as.matrix(hmpf, nrow = 4, ncol = 3)
hmpf1 <- matrix(hmpf, nrow = 4, ncol = 3)
hmpf1 <- matrix(hmpf, nrow = 4, ncol = 3)
View(hmpf1)
names(hmpf1) <- c('date', 'ad_slot_id', 'channel_id', 'count')
View(hmpf1)
names(hmpf1) <- c('date', 'ad_slot_id', 'channel_id')
hmpf1 <- matrix(hmpf, nrow = 4, ncol = 3)
names(hmpf1) <- c('date', 'ad_slot_id', 'channel_id')
View(hmpf1)
names(hmpf1)
colnames(hmpf1) <- c('date', 'ad_slot_id', 'channel_id')
colnames(hmpf1)
names(hmpf1) <- NULL
View(hmpf1)
library("xtable", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
kable(head(iris), format = "latex")
kable(head(iris), format = "html")
kable(head(iris), format = "latex", caption = "Title of the table")
kable(head(iris), format = "html", caption = "Title of the table")
# use the booktabs package
kable(mtcars, format = "latex", booktabs = TRUE)
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
kable(head(iris), format = "latex")
kable(head(iris), format = "html")
kable(head(iris), format = "latex", caption = "Title of the table")
kable(head(iris), format = "html", caption = "Title of the table")
# use the booktabs package
kable(mtcars, format = "latex", booktabs = TRUE)
knitr::opts_chunk$set(echo = FALSE, cache = FALSE)
source('/Users/joost/Desktop/R/Engagement/temp doc please delete.R')
library(xtable)
print(xtable(hmpf1))
kable(head(mtcars), format = "rst", row.names = FALSE)
knitr::opts_chunk$set(echo = FALSE, cache = FALSE)
source('/Users/joost/Desktop/R/Engagement/temp doc please delete.R')
library(knitr)
kable(hmpf1)
install.packages("tidyverse")
install.packages("corrr")
x <- datasets::mtcars %>%
correlate() %>%    # Create correlation data frame (cor_df)
focus(-cyl, -vs, mirror = TRUE) %>%  # Focus on cor_df without 'cyl' and 'vs'
rearrange() %>%  # rearrange by correlations
shave() # Shave off the upper triangle for a clean result
library("corrr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
x <- datasets::mtcars %>%
correlate() %>%    # Create correlation data frame (cor_df)
focus(-cyl, -vs, mirror = TRUE) %>%  # Focus on cor_df without 'cyl' and 'vs'
rearrange() %>%  # rearrange by correlations
shave() # Shave off the upper triangle for a clean result
x
fashion(x)
rplot(x)
engag16 <- read_excel("/Users/joost/Documents/Data and Revenue/Daily analysis/Daily revenue GhanaWeb PartII.xlsx", sheet=3, col_names = F, na = '0', skip = 2)
# Clean Data
#colselect2 <- c(1, 2, 4, 5)
colnames2 <- c('date', 'alexa_pv', 'uniques1000x', 'pages_per_unique', 'nr_articles', 'comments', 'page_per_visit', 'time_per_visit', 'comments_visitor', 'comments_article', 'visits_per_visitor')
colnames(engag16) <- colnames2
engag16 <- engag16[1:366,]
engag16 <- as.data.table(engag16)
#add column for weekdays and weekends
engage16v2 <- engag16 %>% mutate(wday = weekdays(date, abbreviate = TRUE), weekend = ifelse(wday %in% c('Sat', 'Sun'), 'yes', 'no'))
##!!!remove outliers  (method just copied). Select 1 of 2 lines. Top = filter, bottom is NO FILTER
engage16or <- engage16v2 %>% filter(!(alexa_pv > 4e6))
#Load packages
library(readxl)
library(data.table)
library(dplyr)
library(ggplot2)
# Import Excel File
engag16 <- read_excel("/Users/joost/Documents/Data and Revenue/Daily analysis/Daily revenue GhanaWeb PartII.xlsx", sheet=3, col_names = F, na = '0', skip = 2)
# Clean Data
#colselect2 <- c(1, 2, 4, 5)
colnames2 <- c('date', 'alexa_pv', 'uniques1000x', 'pages_per_unique', 'nr_articles', 'comments', 'page_per_visit', 'time_per_visit', 'comments_visitor', 'comments_article', 'visits_per_visitor')
colnames(engag16) <- colnames2
engag16 <- engag16[1:366,]
engag16 <- as.data.table(engag16)
#add column for weekdays and weekends
engage16v2 <- engag16 %>% mutate(wday = weekdays(date, abbreviate = TRUE), weekend = ifelse(wday %in% c('Sat', 'Sun'), 'yes', 'no'))
##!!!remove outliers  (method just copied). Select 1 of 2 lines. Top = filter, bottom is NO FILTER
engage16or <- engage16v2 %>% filter(!(alexa_pv > 4e6))
#engage16or <- engage16v2 %>% group_by(ad_slot_id) %>% filter(!(abs(count - median(count)) > 3*sd(count)))
#engage16or[ , c("alexa_pv", "uniques1000x", "pages_per_unique", "comments_article")] <- lapply(engage16or[ , c("alexa_pv", "uniques1000x", "pages_per_unique", "comments_article")], function(x) {ifelse((abs(x-mean(x)) > 3 * sd(x)), 'NA', x)})
engage16or[ , c("alexa_pv", "uniques1000x", "pages_per_unique", "comments_article")] <- lapply(engage16or[ , c("alexa_pv", "uniques1000x", "pages_per_unique", "comments_article")], function(x) {ifelse((abs(x-mean(x)) > 3 * sd(x)), NA, x)})
x <- engage16or %>%
correlate() %>%    # Create correlation data frame (cor_df)
#focus(-cyl, -vs, mirror = TRUE) %>%  # Focus on cor_df without 'cyl' and 'vs'
rearrange() %>%  # rearrange by correlations
shave() # Shave off the upper triangle for a clean result
fashion(x)
rplot(x)
View(engage16or)
x <- engage16or %>%
correlate() %>%    # Create correlation data frame (cor_df)
focus(-date, mirror = TRUE) %>%  # Focus on cor_df without 'cyl' and 'vs'
rearrange() %>%  # rearrange by correlations
shave() # Shave off the upper triangle for a clean result
fashion(x)
rplot(x)
x <-  NULL
x <- engage16or %>%
correlate()
View(engage16or)
x <- engage16or %>%
correlate() %>%    # Create correlation data frame (cor_df)
focus(-date, -wday, -weekend, mirror = TRUE) %>%  # Focus on cor_df without 'cyl' and 'vs'
rearrange() %>%  # rearrange by correlations
shave() # Shave off the upper triangle for a clean result
fashion(x)
rplot(x)
x <- engage16or %>%
correlate()
x <- engage16or %>% select(2:11)
x <- engage16or %>% select(2:11) %>%
correlate()
x <- engage16or %>% select(2:11) %>%
correlate() %>%    # Create correlation data frame (cor_df)
#  focus(-date, -wday, -weekend, mirror = TRUE) %>%  # Focus on cor_df without 'cyl' and 'vs'
rearrange() %>%  # rearrange by correlations
shave()
fashion(x)
rplot(x)
rplot(x) + xlab("ddd")
rplot(x) + scale_x_continuous(angle = 90)
rplot(x) + theme(axis.text.x = element_text(angle = 90, hjust = 1))
engage16or %>% select(2:11) %>%
correlate() %>% network_plot(min_cor = .2, legend = TRUE)
source('~/Desktop/R/Engagement/Sections Cameroon.R', echo=TRUE)
View(sectjoin)
Sys.Date()-1
yestertable <- sectjoin %>% filter(date == as.Date(Sys.Date()-1)
yestertable <- sectjoin %>% filter(date == as.Date(Sys.Date()-1))
View(yestertable)
library("tidyverse", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
yestertable <- sectjoin %>% filter(date == as.Date(Sys.Date()-1)) %>%  spread(medium, count)
View(yestertable)
library(readr)
read_csv("AdSlotKey.csv") -> slotkey
slotkey$channel_id <- NULL
slotkey$ad_slot_id <- as.numeric(slotkey$ad_slot_id)
sectionlist <- c('HomePage', 'News', 'Entertainment', 'Sports', 'World', 'Business', 'Opinions', 'Members', 'Country', 'Jobs', 'Real Estate', 'Telephone Directory', 'Used Cars', 'Trucks')
slotkey$section <- factor(slotkey$section, levels = sectionlist)
#label data with sectionkey and organise
library(dplyr)
sectjoin <- left_join(cmrallday, slotkey, by = ('ad_slot_id'))
sectjoin$medium <- ifelse(sectjoin$channel_id == 1, 'Desktop', 'Mobile')
sectjoin$count <- as.numeric(sectjoin$count)
View(yestertable)
View(sectjoin)
View(sectjoin)
cmrmobisect <- sectjoin %>% filter(medium == 'Mobile', date == as.Date(Sys.Date()-1))
View(cmrmobisect)
# Plotting section data for Cameroonweb
#import section data
# dbConnect() call
library(RMySQL)
con <- dbConnect(RMySQL::MySQL(),
dbname = 'rijk9_imkserver',
host = "qs3990.pair.com",
port = 0000,
user = "rijk9_12",
password = "efiYjhFV")
#inspect tables
#dbListTables(con)
library(DBI)
cutofdate = c('2016-12-31') #not in use
publisher <- 3  #imk publisher number; 3 = cameroonweb
startdate <- c('2016-12-31') #insert date before startdate
enddate <- as.character(Sys.Date()) #insert date AFTER last day of reporting
myquery <- paste("SELECT  `date`, `ad_slot_id`, `channel_id`, `count` FROM `statistics_slots` WHERE `ad_slot_id` IN( '2',  '13',  '22',  '33', '381', '377', '380', '378', '379',  '42',  '52',  '66',  '63',  '61', '317', '144', '234', '240', '242', '246', '244', '248', '250', '216', '313', '318', '230', '210') AND `date` > '", startdate, "' AND `date` < '", enddate, "' AND `publisher_id` = ", publisher , sep ='')
cmrallday <- dbGetQuery(con, myquery)
cmrallday$date <- as.Date(cmrallday$date)
cmrallday$ad_slot_id <- as.numeric(cmrallday$ad_slot_id)
#disconnect DB
dbDisconnect(con)
#work with AdSlotKey file for labeling sections
library(readr)
read_csv("AdSlotKey.csv") -> slotkey
slotkey$channel_id <- NULL
slotkey$ad_slot_id <- as.numeric(slotkey$ad_slot_id)
sectionlist <- c('HomePage', 'News', 'Entertainment', 'Sports', 'World', 'Business', 'Opinions', 'Members', 'Country', 'Jobs', 'Real Estate', 'Telephone Directory', 'Used Cars', 'Trucks')
slotkey$section <- factor(slotkey$section, levels = sectionlist)
#label data with sectionkey and organise
library(dplyr)
sectjoin <- left_join(cmrallday, slotkey, by = ('ad_slot_id'))
sectjoin$medium <- ifelse(sectjoin$channel_id == 1, 'Desktop', 'Mobile')
sectjoin$count <- as.numeric(sectjoin$count)
cmrmobisect <- sectjoin %>% filter(medium == 'Mobile', date == as.Date(Sys.Date()-1))
View(cmrmobisect)
cmrmobisect <- sectjoin %>%
filter(medium == 'Mobile', date == as.Date(Sys.Date()-1)) %>%
select(c(1,4,5))
View(cmrmobisect)
cmrmobisect <- sectjoin %>%
filter(medium == 'Mobile', date == as.Date(Sys.Date()-1)) %>%
select(c(1,4,5)) %>% names(c('date', 'mobile', 'section'))
names(cmrmobisect$count) <- 'mobile'
View(cmrmobisect)
names(cmrmobisect)
names(cmrmobisect$count) <- c('mobile')
names(cmrmobisect)
names(cmrmobisect[,2]) <- c('mobile')
View(cmrmobisect)
cmrmobisect <- sectjoin %>%
filter(medium == 'Mobile', date == as.Date(Sys.Date()-1)) %>%
select(c(1,4,5)) %>% rename(c('count' = 'mobile'))
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
cmrmobisect <- sectjoin %>%
filter(medium == 'Mobile', date == as.Date(Sys.Date()-1)) %>%
select(c(1,4,5)) %>% rename(c('count' = 'mobile'))
cmrmobisect <- sectjoin %>%
filter(medium == 'Mobile', date == as.Date(Sys.Date()-1)) %>%
select(c(1,4,5)) %>% rename('count' = 'mobile')
cmrmobisect <- sectjoin %>%
filter(medium == 'Mobile', date == as.Date(Sys.Date()-1)) %>%
select(c(1,4,5)) %>% rename(count = mobile)
cmrmobisect <- sectjoin %>%
filter(medium == 'Mobile', date == as.Date(Sys.Date()-1)) %>%
select(c(1,4,5)) %>% rename(.,count = mobile)
cmrmobisect <- sectjoin %>%
filter(medium == 'Mobile', date == as.Date(Sys.Date()-1)) %>%
select(c(1,4,5))
detach("package:tidyr", unload=TRUE)
library("tidyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
detach("package:plyr", unload=TRUE)
detach("package:dplyr", unload=TRUE)
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
cmrmobisect <- sectjoin %>%
filter(medium == 'Mobile', date == as.Date(Sys.Date()-1)) %>%
select(c(1,4,5)) %>% rename(.,count = mobile)
cmrmobisect <- sectjoin %>%
filter(medium == 'Mobile', date == as.Date(Sys.Date()-1)) %>%
select(c(1,4,5)) %>% rename(count = mobile)
cmrmobisect <- sectjoin %>%
filter(medium == 'Mobile', date == as.Date(Sys.Date()-1)) %>%
select(c(1,4,5)) %>% rename('count' = 'mobile')
cmrmobisect <- sectjoin %>%
filter(medium == 'Mobile', date == as.Date(Sys.Date()-1)) %>%
select(c(1,4,5)) %>% rename(count = 'mobile')
cmrmobisect <- sectjoin %>%
filter(medium == 'Mobile', date == as.Date(Sys.Date()-1)) %>%
select(c(1,4,5)) %>% rename(mobile = count)
yestertable <- NULL
cmrdesksect <- sectjoin %>%
filter(medium == 'Desktop', date == as.Date(Sys.Date()-1)) %>%
select(c(1,4,5)) %>% rename(desktop = count)
yestertable <- full_join(cmrdesksect, cmrmobisect, by = 'date')
View(yestertable)
View(cmrdesksect)
cmrdesksect <- sectjoin %>%
filter(medium == 'Desktop', date == as.Date(Sys.Date() -1))
View(cmrdesksect)
View(cmrdesksect)
cmrdesksect <- sectjoin %>%
filter(medium == 'Desktop', date == as.Date(Sys.Date() -1)) %>%
select(c(1,4,5)) %>% rename(desktop = count)
View(cmrdesksect)
View(cmrmobisect)
View(cmrdesksect)
View(yestertable)
yestertable <- full_join(cmrdesksect, cmrmobisect, by = c('date', 'section'))
View(yestertable)
yestertable <- data[c(1,3,2,4)]
yestertable <- yestertable[c(1,3,2,4)]
View(yestertable)
yestertable <- yestertable[c(1,3,2,4)] %>%  select(2:4)
View(yestertable)
yestertabletotal <- summarise(yestertable, desktop = sum(desktop), mobile = sum(mobile))
View(yestertabletotal)
View(yestertabletotal)
yestertabletotal <- summarise(yestertable, desktop = sum(desktop), mobile = sum(mobile, na.rm = TRUE))
View(yestertabletotal)
View(yestertabletotal)
row.names(yestertabletotal) <- c('Total')
View(yestertabletotal)
print(yestertable)
cmrdesksect <- sectjoin %>%
filter(medium == 'Desktop', date == as.Date(Sys.Date() -1)) %>%
select(c(1,4,5)) %>% rename(desktop = count)
cmrmobisect <- sectjoin %>%
filter(medium == 'Mobile', date == as.Date(Sys.Date() -1)) %>%
select(c(1,4,5)) %>% rename(mobile = count)
yestertable <- full_join(cmrdesksect, cmrmobisect, by = c('date', 'section'))
yestertable <- yestertable[c(1,3,2,4)] %>%  select(2:4)
yestertabletotal <- summarise(yestertable, desktop = sum(desktop), mobile = sum(mobile, na.rm = TRUE))
row.names(yestertabletotal) <- c('Total')
cmrdesksect <- sectjoin %>%
filter(medium == 'Desktop', date == as.Date(Sys.Date() -1)) %>%
select(c(1,4,5)) %>% rename(desktop = count)
cmrmobisect <- sectjoin %>%
filter(medium == 'Mobile', date == as.Date(Sys.Date() -1)) %>%
select(c(1,4,5)) %>% rename(mobile = count)
yestertable <- full_join(cmrdesksect, cmrmobisect, by = c('date', 'section'))
yestertable <- yestertable[c(1,3,2,4)] %>%  select(2:4)
yestertabletotal <- summarise(yestertable, desktop = sum(desktop), mobile = sum(mobile, na.rm = TRUE))
row.names(yestertabletotal) <- c('Total')
print(yestertable)
