{
    "collab_server" : "",
    "contents" : "# Daily revenues\n\n#libraries in use\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(grid)\n\n#Read data using readxl,  and data prep\nday2016raw <- read_excel(\"/Users/joost/Documents/Data and Revenue/Daily analysis/Daily revenue GhanaWeb PartII.xlsx\", sheet=1, col_names = F, na = '0', skip = 2)\n\ncolselect2 <- c(1, 2, 3, 4, 6, 7, 9, 10, 13)\ncolnames2 <- c('datum', 'totrev', 'pageview', 'ecpmEuro', 'Adsense', 'OpenX', 'Outbrain', 'AdX', 'Mobile_Total')\n\ndayrev2016 <- day2016raw[, colselect2]\ncolnames(dayrev2016) <- colnames2\ndayrev2016 <- dayrev2016[1:366,]\n\n#calcualte DAILY desktop revenue and ratio between desktop and mobile\ncutofday <- 4000\ndayrev2016ext <- dayrev2016 %>% mutate(desktoprev = totrev - Mobile_Total,  ratio_desktop_mobile = desktoprev / Mobile_Total, totrevcap = ifelse(totrev > cutofday, cutofday, totrev))\n\n#organise data by week\nweekrev2016 <- dayrev2016 %>% group_by(week = cut(datum, \"week\")) %>% summarize(totrev = sum(totrev), Mobile_Total = sum(Mobile_Total))\ncutoffweek = 35000 \nweekrev2016ext <- weekrev2016 %>% mutate(desktoprev = totrev - Mobile_Total,  ratio_desktop_mobile = desktoprev / Mobile_Total, totrevcap = ifelse(totrev > cutoffweek, cutoffweek, totrev), desktopcap = ifelse(desktoprev > cutoffweek, cutoffweek, desktoprev))\nnames(weekrev2016ext)[1] <- c('datum')\nweekrev2016ext$datum <- as.Date(weekrev2016ext$datum)\n\n#plot 2016 total desktop and mobile revenue by DAY\np <- ggplot(dayrev2016ext)\n\np1 <- p +\n  geom_area(aes(datum, totrevcap, fill = 'darkgreen'), alpha = 0.8) +\n  scale_y_continuous(name = 'Revenue (Euro)', breaks = seq(0, 4000, by = 1000), limits = c(0, 4400), expand = c(0, 0)) +\n  geom_area(aes(datum, desktoprev, fill = 'yellow'), alpha = 0.8) +\n  geom_area(aes(datum, Mobile_Total, fill = 'blue'), alpha = 0.8) +\n  scale_fill_identity(name = 'Source', guide = 'legend',labels = c('Mobile', 'Total', 'Desktop')) \n\n#plot ratio between desktop and mobile\np2 <- p+ geom_line(aes(x = datum, y = ratio_desktop_mobile, col = 'black')) + \n  scale_y_continuous(name = 'Desktop/Mobile', breaks = seq(1, 2, by = 0.5), limits = c(1, 2), expand = c(0, 0)) + \n  geom_smooth(aes(x = datum, y = ratio_desktop_mobile), method ='lm', formula=y~x, col = 'red') + \n  scale_colour_identity(name = 'Ratio', guide = 'legend',labels = c('')) \n\ngrid.newpage()\ngrid.draw(rbind(ggplotGrob(p1), ggplotGrob(p2), size = \"last\"))\n\n#plot total desktop and mobile revenue by WEEK\npw <- ggplot(weekrev2016ext)\n\npw1 <- pw +\n  geom_area(aes(datum, totrevcap, fill = 'darkgreen'), alpha = 0.8) +\n  scale_y_continuous(name = 'Revenue (Euro)', breaks = seq(0, 35000, by = 10000), limits = c(0, 35000), expand = c(0, 0)) +\n  geom_area(aes(datum, desktopcap, fill = 'yellow'), alpha = 0.8) +\n  geom_area(aes(datum, Mobile_Total, fill = 'blue'), alpha = 0.8) +\n  scale_fill_identity(name = 'Source', guide = 'legend', labels = c('Mobile', 'Total', 'Desktop'))\n\n#plot ratio between desktop and mobile\npw2 <- pw + \n  geom_line(aes(x = datum, y = ratio_desktop_mobile, col = 'black')) + \n  scale_y_continuous(name = 'Desktop/Mobile', breaks = seq(1, 2, by = 0.5), limits = c(1, 2), expand = c(0, 0)) + \n  geom_smooth(aes(x = datum, y = ratio_desktop_mobile), method = 'lm', formula=y~x, col = 'red') + \n  scale_colour_identity(name = 'Ratio', guide = 'legend',labels = c('')) \n\ngrid.newpage()\ngrid.draw(rbind(ggplotGrob(pw1), ggplotGrob(pw2), size = \"last\"))\n\n# Revenue by Source per week\nweeksource2016 <- dayrev2016 %>% group_by(week = cut(datum, \"week\")) %>% summarize_each(funs(sum))\nweeksource2016$datum <- NULL\nnames(weeksource2016)[1] <- c('datum')\ncutoffweeksource = 12500 \nweeksource2016ext <-  as.data.frame(lapply(weeksource2016[5:8], function(x) {ifelse( x > cutoffweeksource, cutoffweeksource, x)}))\nweeksource2016ext$datum <- weeksource2016$datum\nweeksource2016ext$datum <- as.Date(weeksource2016ext$datum)\n\nweeksource2016long <- weeksource2016ext %>% gather('source', 'revenue', 1:4)\n\npwsl <- ggplot(weeksource2016long, aes(datum, revenue, col = source)) +\n  geom_line(size = 1.5, alpha = 0.8) +\n  labs(title = 'Revenue per Source per Week', y = 'Weekly Revenue (EURO)', x = '') +\n  scale_y_continuous(breaks = seq(0, cutoffweeksource, by = cutoffweeksource/5), limits = c(0, cutoffweeksource), expand = c(0, 0))\npwsl\n\n\n# A look into OpenX data only\ncolselectOX <- c(1, 26, 28)\ncolnamesOX <- c('datum', 'OpenX_Desktop', 'OpenX_Mobile')\n\ndayOX <- day2016raw[, colselectOX]\ndayOX <- dayOX[1:366,]\ncolnames(dayOX) <- colnamesOX\nweekOX <-  dayOX %>% group_by(week = cut(datum, \"week\")) %>%  summarize(OpenX_Desktop = sum(OpenX_Desktop), OpenX_Mobile = sum(OpenX_Mobile))\nweekOX$week <- as.Date(weekOX$week)\n\ncutofOX <- 9000\nweekOXext <- weekOX %>% mutate(OXratio = OpenX_Desktop / OpenX_Mobile, OX_Deskcap = ifelse(OpenX_Desktop > cutofOX, cutofOX, OpenX_Desktop))\n\nweekOXlong <- weekOXext %>% select(c(1,3,5)) %>%  gather('OX', 'revenue',  2:3)\n\npwox <- ggplot(weekOXlong, aes(week, revenue, col = OX)) +\n  geom_line(size = 1.5) +\n  scale_y_continuous(breaks = seq(0, cutofOX, by = 3000), limits = c(0, cutofOX), expand = c(0, 0))\n  \nprox <- ggplot(weekOXext, aes(week, OXratio, col = \"black\")) +\n  geom_line(size = 1.5) +\n  scale_colour_identity(name = 'Ratio', guide = 'legend',labels = c('')) \n\ngrid.newpage()\ngrid.draw(rbind(ggplotGrob(pwox), ggplotGrob(prox), size = \"last\"))\n\n",
    "created" : 1484046039390.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1747470382",
    "id" : "172C63CD",
    "lastKnownWriteTime" : 1484049492,
    "last_content_update" : 1484049492664,
    "path" : "~/Desktop/R/Revenue/Daily revenues.R",
    "project_path" : "Daily revenues.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}